# Generated by Django 5.2.3 on 2025-06-22 05:00

import ckeditor_uploader.fields
import django.core.files.storage
import django.db.models.deletion
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PartCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('slug', models.SlugField(help_text='Versão do nome otimizada para URLs.', max_length=120, unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalog.partcategory', verbose_name='Categoria Pai')),
            ],
            options={
                'verbose_name': 'Categoria de Peça',
                'verbose_name_plural': 'Categorias de Peças',
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumbnail', models.ImageField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(), upload_to='part_thumbnails/', verbose_name='Thumbnail')),
                ('is_hall_of_fame', models.BooleanField(default=False, verbose_name='Destaque (Hall da Fama)')),
                ('name', models.CharField(max_length=200, verbose_name='Nome da Peça')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('stl_file', models.FileField(storage=django.core.files.storage.FileSystemStorage(), upload_to='parts_stl/', verbose_name='Arquivo STL')),
                ('status', models.CharField(choices=[('in_review', 'Em Revisão'), ('approved', 'Aprovado'), ('rejected', 'Rejeitado')], default='in_review', max_length=10, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.partcategory', verbose_name='Categoria da Peça')),
            ],
            options={
                'verbose_name': 'Peça',
                'verbose_name_plural': 'Peças',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('slug', models.SlugField(help_text='Versão do nome otimizada para URLs.', max_length=120, unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalog.projectcategory', verbose_name='Categoria Pai')),
            ],
            options={
                'verbose_name': 'Categoria de Projeto',
                'verbose_name_plural': 'Categorias de Projetos',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumbnail', models.ImageField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(), upload_to='part_thumbnails/', verbose_name='Thumbnail')),
                ('is_hall_of_fame', models.BooleanField(default=False, verbose_name='Destaque (Hall da Fama)')),
                ('title', models.CharField(max_length=255, verbose_name='Título do Projeto')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Descrição Detalhada')),
                ('status', models.CharField(choices=[('in_review', 'Em Revisão'), ('approved', 'Aprovado'), ('rejected', 'Rejeitado')], default='in_review', max_length=10, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('parts_used', models.ManyToManyField(blank=True, to='catalog.part', verbose_name='Peças Utilizadas')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.projectcategory', verbose_name='Categoria do Projeto')),
            ],
            options={
                'verbose_name': 'Projeto',
                'verbose_name_plural': 'Projetos',
                'ordering': ['-created_at'],
            },
        ),
    ]
